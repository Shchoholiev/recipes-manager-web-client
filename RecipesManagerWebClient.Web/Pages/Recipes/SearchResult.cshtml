@page "/searchresult"
@model RecipesManagerWebClient.Web.Pages.Recipes.SearchResultModel
<div class="container">
    <div class="content">
        <p>Search result</p>
		<p class="count-results">@Model.TotalItems results</p>
    </div>
    <div class="dishes">
        @foreach (var recipe in Model.Recipes)
        {
            var imageUrl = "/assets/no-image.svg";
            if (recipe.Thumbnail != null)
            {
                imageUrl = Model.ImageUrl + recipe.Thumbnail.SmallPhotoGuid.ToString() + "." + recipe.Thumbnail.Extension;
            }

            <div class="dish-item" style="background:linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, #000000 100%), url(@imageUrl)">
                <div class="dish-title">@recipe.Name</div>
                <div class="dish-author">@recipe.CreatedBy.Name</div>
                <div class="timer"><img b-c3mbu1qqil src="~/assets/timer.svg" /></div>
                <div class="dish-time">@recipe.MinutesToCook min</div>
                @if (recipe.IsSaved)
                {
                    <div class="dish-saved"><img b-c3mbu1qqil src="~/assets/saved.svg" /></div>
                }
                else
                {
                    <div class="dish-saved"><img b-c3mbu1qqil src="~/assets/unsaved.svg" /></div>
                }
            </div>
        }
    </div>
    <div class="pagination">
        @if (Model.TotalPages > 1)
        {
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (Model.CurrentPage == i)
                {
                    <button class="page-link page-link-active">@i</button>
                }
                else
                {
                    <button class="page-link">@i</button>

                }

            }
        }
    </div>
</div>
<script>
    const urlParams = new URLSearchParams(window.location.search);
    const searchTerm = urlParams.get("search");
    const pageButtons = document.querySelectorAll(".page-link");
    pageButtons.forEach((pageButton) => {
        pageButton.addEventListener("click", function () {
            const buttonNumber = encodeURIComponent(pageButton.innerHTML);
            window.location.href = "/searchresult?pageSearch=" + buttonNumber;
        })
    })

</script>